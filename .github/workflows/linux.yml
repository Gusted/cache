name: CI (Linux)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - master

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        version:
          - stable
          - nightly

    name: ${{ matrix.version }} - x86_64-unknown-linux-gnu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            /var/lib/docker
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-x86_64-unknown-linux-gnu
          profile: minimal
          override: false

      - name: install virtualenv
        run: pip install virtualenv

      - name: install dependencies
        run: make env

      - name: build docker image
        run: make docker-build

      - name: start docker container
        run: make docker-run

      - name: run tests
        run: make test

      - name: stop docker container
        run: make docker-stop

      - name: Login to DockerHub
        if: (github.ref == 'refs/heads/master' || github.event_name == 'push') && github.repository == 'mCaptcha/cache'
        uses: docker/login-action@v1
        with:
          username: mcaptcha
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build and publish docker images
        if: (github.ref == 'refs/heads/master' || github.event_name == 'push') && github.repository == 'mCaptcha/cache'
        run: make docker
